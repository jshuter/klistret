<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of Klistret. Klistret is free software: you can redistribute 
	it and/or modify it under the terms of the GNU General Public License as 
	published by the Free Software Foundation, either version 3 of the License, 
	or (at your option) any later version. Klistret is distributed in the hope 
	that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
	warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU General Public License for more details. You should have received a copy 
	of the GNU General Public License along with Klistret. If not, see <http://www.gnu.org/licenses/> -->
<xs:schema xmlns="http://www.klistret.com/cmdb/ci/commons"
	targetNamespace="http://www.klistret.com/cmdb/ci/commons" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">

	<xs:simpleType name="Name">
		<xs:annotation>
			<xs:documentation>
				Name given to the base instance (usually human
				readable)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Namespace">
		<xs:annotation>
			<xs:documentation>
				Namespace in the traditional since to allow unique
				instances despite the same identifier. An identifier defined in a
				namespace is associated only with that namespace. The same
				identifier can be independently defined in multiple namespace. For
				example, it might useful to have a software CI in a namespace
				CMDB.EXISTING and an identical CI under CMDB.PLANNED so these two CI
				during reconciliation. Within any CMDB there is always a couple of
				worlds. The major are things that can be discovered and things under
				planing. The bridge between CMDB worlds are processes.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Collection">
		<xs:annotation>
			<xs:documentation>
				Another word for collection is dataset. This like
				the namespace attribute is a singular attribute. Collections denote
				a group of base instances not identification. CMDB.PRODUCTION would
				be a viable candidate for a collection value.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Tag">
		<xs:annotation>
			<xs:documentation>
				A non-hierarchical keyword or term assigned to a
				base instance. Tags enrich search criteria and may be dynamically
				applied by users.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Usage">
		<xs:annotation>
			<xs:documentation>
				A non-hierarchical keyword or term assigned to a
				base instance. Usage defines purpose.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Description">
		<xs:annotation>
			<xs:documentation>
				Description of the base instance (human readable)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Annotation">
		<xs:annotation>
			<xs:documentation>
				Notes or shorter comments placed on the base
				instance
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:complexType name="CompositeId">
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="1"
				maxOccurs="1"></xs:element>
			<xs:element name="Value" type="xs:string" minOccurs="1"
				maxOccurs="1"></xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="Origin">
		<xs:annotation>
			<xs:documentation>Origin of the base instance. Data might have been
				migrated into the CMDB the creation identification plus the system
				of the creating system needs to be saved. Often origins are helpful
				for book keeping or reconciliation of coming updates.
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Identification" type="xs:string"
				minOccurs="1" maxOccurs="1"></xs:element>
			<xs:element name="Composite" type="CompositeId" minOccurs="1"
				maxOccurs="unbounded"></xs:element>
		</xs:choice>
		<xs:attribute name="Name" type="xs:string">
			<xs:annotation>
				<xs:documentation>Name of the system</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="Contact">
		<xs:annotation>
			<xs:documentation>Contact information</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0"
				maxOccurs="1">
			</xs:element>
			<xs:element name="Telephone" type="xs:string" minOccurs="0"
				maxOccurs="1">
			</xs:element>
			<xs:element name="EMail" type="xs:string" minOccurs="0"
				maxOccurs="1">
			</xs:element>
			<xs:element name="Organization" type="xs:string"
				minOccurs="0" maxOccurs="1">
			</xs:element>
			<xs:element name="Function" type="xs:string" minOccurs="0"
				maxOccurs="unbounded">
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="Ownership">
		<xs:annotation>
			<xs:documentation>
				Ownership is responsibility over the base instance
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Contact name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Contact" type="Contact"></xs:element>
		</xs:choice>
	</xs:complexType>

	<xs:simpleType name="State">
		<xs:annotation>
			<xs:documentation>State or status of a base instance.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:complexType name="Property">
		<xs:annotation>
			<xs:documentation>
				General attribute (or property) of
				elements/relationships not modeled allowing the end-user
				to pin
				"extra" data to the CIs.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="1"
				maxOccurs="1">
			</xs:element>
			<xs:element name="Value" type="xs:string" minOccurs="1"
				maxOccurs="1">
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="Reference" abstract="true">
		<xs:sequence>
			<xs:element name="Id" type="xs:long" maxOccurs="1"
				minOccurs="1" />
			<xs:element name="Name" type="xs:string" maxOccurs="1"
				minOccurs="1" />
			<xs:element name="QName" type="xs:string" maxOccurs="1"
				minOccurs="1" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SourceReference">
		<xs:complexContent>
			<xs:extension base="Reference">
				<xs:sequence></xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="DestinationReference">
		<xs:complexContent>
			<xs:extension base="Reference">
				<xs:sequence></xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="Base" abstract="true">
		<xs:sequence>
			<xs:element name="Name" type="Name" minOccurs="1"
				maxOccurs="1">
			</xs:element>
			<xs:element name="Namespace" type="Namespace" minOccurs="0"
				maxOccurs="1">
			</xs:element>
			<xs:element name="Collection" type="Collection" minOccurs="0"
				maxOccurs="1">
			</xs:element>
			<xs:element name="Tag" type="Tag" minOccurs="0" maxOccurs="unbounded">
			</xs:element>
			<xs:element name="Usage" type="Usage" minOccurs="0"
				maxOccurs="unbounded">
			</xs:element>
			<xs:element name="Description" type="Description"
				minOccurs="0" maxOccurs="unbounded">
			</xs:element>
			<xs:element name="Annotation" type="Annotation" minOccurs="0"
				maxOccurs="unbounded">
			</xs:element>
			<xs:element name="Property" type="Property" minOccurs="0"
				maxOccurs="unbounded">
			</xs:element>
			<xs:element name="Origin" type="Origin" minOccurs="0"
				maxOccurs="1"></xs:element>
		</xs:sequence>
		<xs:attribute name="Watermark" type="xs:string"></xs:attribute>
		<xs:attribute name="Revision" type="xs:string"></xs:attribute>
	</xs:complexType>

	<xs:complexType name="Element" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Root CI for core (services, systems, and
				components) and
				process (change, problem, incident) elements.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Base">
				<xs:sequence>
					<xs:element name="Ownership" type="Ownership" maxOccurs="1"
						minOccurs="0">
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:element name="Element" type="Element"></xs:element>


	<xs:complexType name="Relation" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Root association (abstract) between only two CIs
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Base" />
		</xs:complexContent>
	</xs:complexType>

	<xs:element name="Relation" type="Relation"></xs:element>
</xs:schema>