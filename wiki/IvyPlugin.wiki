The entire Software structure in Klistret is taken from the [http://ant.apache.org/ivy/ Ivy] framework.  It is only natural to be able to register Software and Publication CIs plus their relationships via an extension to Klistret (part of the Blueprints project).

== Description ==
Ivy modules, publications, and dependencies map without deviation to [SoftwareCI Software CIs], [PublicationCI Publication CIs] och Dependency CIs i Klistret.  However, Klistret does not work like package repository rather repositories (like [http://www.ibiblio.org/ Ibiblio]) actually manage artifacts (like [http://archiva.apache.org/ Archiva]) whereas Klistret federates a percentage of a repository's metadata.  So the complete flora of metadata latent to Ivy description files isn't fully mirrored.  Klistret harbors just enough metadata to register CIs.

A plugin for Ivy exists in the Blueprint project.  The plugin is responsible for registering an Ivy module description (i.e. XML document) and exporting out software CIs as an Ivy description file.  The plugin is very basic.  It relies almost to 100 percent on the user feeding the correct information.  The process of registering Ivy module description should not be confused with Ivy publishing or resolving.

=== Mapping ===
This section maps sections of the Ivy module description to CI properties.

==== Software ====
|| *Section* || *Attribute* || *Klistret* || *Required* || *Description* ||
|| info || organisation || Organisation || Yes || Direct transfer from Ivy's organisation attribute into the organisation property for Software ||
|| info || module || Name || Yes || The module is the Software and thus the module attribute becomes the _Name_ property for both the Element POJO and the Commons _Name_ property part the Base CI. ||
|| info || revision || Version || Yes || Ivy use the title _revision_ while Klistret sticks to the more common _Version_. ||
|| info || branch || n/a || No || The branch attribute is not carried over but could be mapped in the future into a _Property_ element. ||
|| info || status || Phase || No || Ivy describe _status_ the way people regard a module revision.  This is close enough to the Lifecycle or _Phase_ property.  For example, the *integration* status is a revision _built by a continuous build, a nightly build_ etc.  This is the same has software stuck in the development phase.  Ivy also defines *milestones* and *releases* which are akin to test and production phases.  The actual value of _Phase_ should derive from a contextual CI.  It is something every organization should define both for their internal work and external third party software. ||
|| info || publication || Availability || No || Ivy does not require the _publication_ attribute and neither does Klistret but it may be used to specific time frames thus mapping to the _Availability_ property. ||

==== Publication ====

==== Dependency ==== 

== Registration ==

== Search ==